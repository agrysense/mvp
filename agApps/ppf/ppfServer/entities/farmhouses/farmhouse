var document = require("document");
var log = require("log"); log.setLevel("info");
var componentModule = require("../component");

var farmhouseid = null;
var farm = null;
var name = null;
var location = null;
var gps = null;
var description = null;
var category = null;
var length = null;
var width = null;

/**
 * Defines the Farmhouse object
 *
 * @class Farmhouse
 * @constructor
 * @param {Object} [dto] a document containing Farmhouse data
 * @param {DeviceManager} deviceManager instance of DeviceManager
 */
function Farmhouse(dto, deviceManager) {
    
    componentModule.Component.call(this, dto);
    if (!dto.id || !dto.key) {   
        throw {
            errorCode: "Missing_Parameter",
            errorDetail: "Farmhouse: dto.id or dto.key cannot be null or empty"
        };
    }
    
    if (!deviceManager) {   
        throw {
            errorCode: "Missing_Parameter",
            errorDetail: "Farmhouse: deviceManager cannot be null or undefined"
        };
    }
}

Farmhouse.prototype = new componentModule.Component({inheritance: true});
Farmhouse.prototype.constructor = Farmhouse;


/**
 * lists all available controllers under this farm
 * 
 * @method listControllers
 * @param {String} dto
 * @return {JSONArray<Controller>}
 * @throws {Error}
 */
Farmhouse.prototype.listControllers = function(deviceManager, dto) {
    
    var farmhouseid = (dto != null && dto.farmhouseid != null) ? dto.farmhouseid : this.farmhouseid;
    var updatedDto = {
      "farmhouseid": farmhouseid
    };
    return deviceManager.listControllers(updatedDto);
}