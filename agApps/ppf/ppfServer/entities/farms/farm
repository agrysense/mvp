var document = require("document");
var log = require("log"); log.setLevel("info");
var componentModule = require("../component");

var farmid = null;
var company = null;
var name = null;
var location = null;
var gps = null;

/**
 * Defines the Farm object
 *
 * @class
 * @constructor
 */
var Farm = function(dto) {
    componentModule.Component.call(this, dto);
    if (!dto.farmid) {   
        throw {
            errorCode: "Missing_Parameter",
            errorDetail: "Farm: dto.farmid cannot be null or empty"
        };
    }
    this.farmid = dto.farmid;
    this.company = dto.company;
    this.name = dto.name;
    this.location = dto.location;
    this.gps = dto.gps;
}

Farm.prototype = new componentModule.Component({inheritance: true});
Farm.prototype.constructor = Farm;

/**
 * return Controller object as JSONObject
 * 
 * @method toJSONObject
 * @param {String} dto
 * @return {JSONObject}
 * @throws {Error}
 */
Farm.prototype.toJSONObject = function(dto) {
    var result = {
        "farmid": this.farmid,
        "company": this.company,
        "name": this.name,
        "location": this.location,
        "gps": this.gps
    }
    
    return result;
}

/**
 * lists all available farmhouses under this farm
 * 
 * @method listFarmhouses
 * @param {String} dto
 * @return {JSONArray<FarmHouse>}
 * @throws {Error}
 */
Farm.prototype.listFarmhouses = function(farmhouseManager, dto) {
    var farmid = (dto != null && dto.farmid != null) ? dto.farmid : this.farmid;
    var updatedDto = {
      "farmid": farmid
    };
    return farmhouseManager.listFarmhouses(updatedDto);
}

/**
 * counts all available farmhouses under this farm
 * 
 * @method getTotalFarmhouses
 * @param {String} dto
 * @return {Object} 
 * @throws {Error}
 */
Farm.prototype.getTotalFarmhouses = function(farmhouseManager, dto) {
    return this.listFarmhouses(farmhouseManager, dto).length;
}

/**
 * counts all available birds under this farm
 *
 * @method getTotalBirds
 * @param {String} dto
 * @return {Object}
 * @throws {Error}
 */
Farm.prototype.getTotalBirds = function(dto) {
}